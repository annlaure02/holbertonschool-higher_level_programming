>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test with integers and floats
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3.5)
[[0.29, 0.57, 0.86], [1.14, 1.43, 1.71]]

Test with other type in the matrix
>>> matrix_divided([[1, 'two', 3], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test if div is equal to 0
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

Test if div is not a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'hello')
Traceback (most recent call last):
TypeError: div must be a number

Test size of the matrix
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
Traceback (most recent call last):
TypeError: div must be a number
